#riders_per_station_mapper.py
import sys
import string

def mapper():
    """
    The input to this mapper will be the final Subway-MTA dataset.  This mapper 
    should return a line for each UNIT, along with the number of ENTRIESn_hourly for that row.
    
    An example input to the mapper may would look like this:
    R002    1050105.0
    
    The mapper should emit a key and value pair separated by a tab, for example:
    R002\t105105.0
    """
    count = 0
    for line in sys.stdin:
    	# your code here
        data = line.split(",") 
        if count == 0:
            count += 1
        else:
            print "{0}\t{1}".format(data[1],data[6])
                                    

mapper()
##############################################
##riders_per_station_reducer.py
def reducer():
    '''
    Given the output of the mapper for this exercise, the reducer should return one row
    per unit, along with the total number of ENTRIESn_hourly over the course of may. 
    
    You can assume that the input to the reducer is sorted by UNIT, such that all rows 
    corresponding to a particular UNIT are group together.

    '''
    
    entries = 0.0
    old_key = None
    for line in sys.stdin:
        data = line.strip().split("\t")
        if len(data) != 2:
            continue
        thisKey, thisGen = data
        if old_key and old_key != thisKey:
            print "{0}\t{1}".format(old_key, entries)
            entries = 0
        old_key = thisKey
        entries += float( thisGen)
    if old_key != None:
        print "{0}\t{1}".format(old_key, entries)

reducer()

